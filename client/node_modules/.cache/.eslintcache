[{"/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/index.js":"1","/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/App.js":"2","/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/pages/SearchBooks.js":"3","/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/components/Navbar.js":"4","/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/pages/SavedBooks.js":"5","/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/components/SignupForm.js":"6","/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/components/LoginForm.js":"7","/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/utils/auth.js":"8","/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/utils/localStorage.js":"9","/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/utils/API.js":"10","/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/utils/mutations.js":"11"},{"size":266,"mtime":1680053880848,"results":"12","hashOfConfig":"13"},{"size":1545,"mtime":1680118160115,"results":"14","hashOfConfig":"13"},{"size":4723,"mtime":1680053880849,"results":"15","hashOfConfig":"13"},{"size":2567,"mtime":1680053880848,"results":"16","hashOfConfig":"13"},{"size":3005,"mtime":1680053880849,"results":"17","hashOfConfig":"13"},{"size":3683,"mtime":1680376987475,"results":"18","hashOfConfig":"13"},{"size":2911,"mtime":1680377235195,"results":"19","hashOfConfig":"13"},{"size":1234,"mtime":1680053880849,"results":"20","hashOfConfig":"13"},{"size":793,"mtime":1680053880849,"results":"21","hashOfConfig":"13"},{"size":1392,"mtime":1680053880849,"results":"22","hashOfConfig":"13"},{"size":292,"mtime":1680118485655,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"8c65c4",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/index.js",[],[],[],"/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/App.js",[],[],"/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/pages/SearchBooks.js",[],[],"/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/components/Navbar.js",[],[],"/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/pages/SavedBooks.js",[],[],"/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/components/SignupForm.js",[],[],"/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/components/LoginForm.js",["60","61","62","63"],[],"// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from \"@apollo/client\";\n\nimport { loginUser } from '../utils/API';\n\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [login, { error }] = useMutation(loginUser);\n  \n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await login({\n        variables: { ...userFormData },\n      });\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/utils/auth.js",["64"],[],"// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/utils/localStorage.js",[],[],"/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/utils/API.js",[],[],"/Users/sarahjacobs/gt-bootcamp/homework/readr/client/src/utils/mutations.js",[],[],{"ruleId":"65","severity":2,"message":"66","line":16,"column":3,"nodeType":"67","messageId":"68","endLine":16,"endColumn":12},{"ruleId":"69","severity":1,"message":"70","line":40,"column":15,"nodeType":"67","messageId":"71","endLine":40,"endColumn":19},{"ruleId":"65","severity":2,"message":"72","line":44,"column":12,"nodeType":"67","messageId":"68","endLine":44,"endColumn":20},{"ruleId":"65","severity":2,"message":"72","line":48,"column":37,"nodeType":"67","messageId":"68","endLine":48,"endColumn":45},{"ruleId":"73","severity":1,"message":"74","line":49,"column":1,"nodeType":"75","endLine":49,"endColumn":34},"no-undef","'useEffect' is not defined.","Identifier","undef","no-unused-vars","'data' is assigned a value but never used.","unusedVar","'response' is not defined.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration"]